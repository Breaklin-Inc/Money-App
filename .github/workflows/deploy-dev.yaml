name: Deploy to Dev

on:
  push:
    branches:
      - main
secrets: &secrets
  github-pat: ${{NODE_AUTH_TOKEN}}
jobs:
  version:
    name: Set version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout

      - name: Setup Node
        uses: actions/setup-node
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm

  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory:
          ./apps/api
    steps:
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
      - uses: actions/checkout@v2


        name: Set up Node.js
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        run: npm i -g pnpm

      - name: Install deps
        run: |
          pnpm install

      - name: Login to Heroku Container Registry
        run: |
          echo "${{secrets.HEROKU_API_KEY}}"
          | docker login --username=_ --password-stdin registry.heroku.com
      - name: Build Docker image for Heroku
        run: docker build -t registry.heroku.com/${{vars.HEROKU_APP_NAME}}/web

      - name: Push image to Heroku registry
        run: docker push registry.heroku.com/${{vars.HEROKU_APP_NAME}}/web

      - name: Release image on Heroku
        run: |
          IMAGE_ID=$(docker inspect registry.heroku.com/${{vars.HEROKU_APP_NAME}}/web --format={{.Id}})
          curl -n -X PATCH https://api.heroku.com/apps/${{vars.HEROKU_APP_NAME}}/formation \
          -d '{
            "updates":[{
                "type": "web",
                "docker_image": "'"$IMAGE_ID"'"
              }]
          }' \
          -H "Content-Type: application/json" \
          -H "Accept: application/vnd.heroku+json; version=3.docker-releases" \
          -H "Authorization: Bearer ${{ secrets.HEROKU_API_KEY }}"

      - name: Set Heroku environment variables
        run: |
          heroku config:set DATABASE_HOST=${{ secrets.DATABASE_HOST }} \
          DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} \
          DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
          DATABASE_NAME=${{ secrets.DATABASE_NAME }} \
          ENV=prod \
          --app ${{ vars.HEROKU_APP_NAME }}